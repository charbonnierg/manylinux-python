#!/usr/bin/env bash

set -euo pipefail


function setPythonInterpreter() {

    case "$PYTHON_VERSION" in
        3.7)
            export PYTHON_INTERPRETER="/opt/python/cp37-cp37m/bin/python3"
            ;;
        3.8)
            export PYTHON_INTERPRETER="/opt/python/cp38-cp38m/bin/python3"
            ;;
        3.9)
            export PYTHON_INTERPRETER="/opt/python/cp39-cp39m/bin/python3"
            ;;
        3.10)
            export PYTHON_INTERPRETER="/opt/python/cp310-cp310m/bin/python3"
            ;;
        *)
            echo -n "Unsupported python version: $PYTHON_VERSION"
            ;;
    esac
}


function setPlatform() {
    case "$PLATFORM" in

        linux/amd64)
            export WHEEL_PLATFORM="manylinux_2_24_x86_64"
            ;;

        linux/arm64)
            export WHEEL_PLATFORM="manylinux_2_24_aarch64"
            ;;

        linux/arm/v7)
            export WHEEL_PLATFORM="manylinux_2_24_armv7l"
            ;;

        *)
            echo -n "Unsupported platform: {$PLATFORM}"
            ;;
    esac
}

function showHelp() {
    echo -e "Generate wheels for any package.\n"
    echo -e "Wheels are always written into /wheelhouse directory."
    echo -e "Python interpreter can be specified using PYTHON_VERSION environment variable."
    echo -e "\nExample usage:\n"
    echo -e "PYTHON_VERSION=3.8 manylinux-2-24 nkeys"
    echo -e "PYTHON_VERSION=3.9 manylinux-2-24 numpy"
}


function buildWheel() {
    # Configurre version of python to use
    setPythonInterpreter
    # Configure wheel platform
    setPlatform
    echo -e "Using python interpreter: ${PYTHON_INTERPRETER}"
    # Wheels are all stored in /wheelhouse directory
    mkdir -p /wheelhouse
    # Create a temporary directory to store wheels
    TMP_WHEEL_DIR=$(mktemp -d)
    # Generate wheels
    $PYTHON_INTERPRETER -m pip wheel --wheel-dir=$TMP_WHEEL_DIR $@
    # Copy wheels which are not platform wheels
    for wheel in $(ls -1 $TMP_WHEEL_DIR/*-none-any.whl 2>/dev/null || true); do
        mv $wheel /wheelhouse/.
    done
    # Copy wheels which are already manylinux wheels
    for wheel in $(ls -1 $TMP_WHEEL_DIR/*-manylinux*.whl 2>/dev/null || true); do
        mv $wheel /wheelhouse/.
    done
    # Repair wheels which are platform wheels
    for wheel in $(ls -1 $TMP_WHEEL_DIR/*.whl 2>/dev/null || true); do
        $PYTHON_INTERPRETER -m auditwheel repair $wheel --wheel-dir /wheelhouse --plat $WHEEL_PLATFORM
    done
    # Clean up
    rm -rf $TMP_WHEEL_DIR
    unset WHEEL_PLATFORM
    unset PYTHON_INTERPRETER
}


function main() {
    case "$1" in
        --help)
            showHelp
            ;;
        -h)
            showHelp
            ;;
        *)
            if [ -v ${PYTHON_VERSION:-""} ]; then
                echo -e "Building wheel for python $PYTHON_VERSION"
                PYTHON_VERSION=$PYTHON_VERSION buildWheel $@
            else
                echo -e "Iterating over python versions"
                for version in 3.7 3.8 3.9 3.10; do
                    echo -e "Building wheel for python $version"
                    PYTHON_VERSION=$version buildWheel $@
                done
            fi
            ;;
    esac
}

main $@
